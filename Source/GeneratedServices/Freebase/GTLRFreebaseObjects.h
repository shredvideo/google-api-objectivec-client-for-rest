// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Freebase Search (freebase/v1)
// Description:
//   Find Freebase entities using textual queries and other constraints.
// Documentation:
//   https://developers.google.com/freebase/

#if GTLR_BUILT_AS_FRAMEWORK
  #import "GTLR/GTLRObject.h"
#else
  #import "GTLRObject.h"
#endif

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRFreebase_ReconcileCandidate;
@class GTLRFreebase_ReconcileCandidateNotable;
@class GTLRFreebase_ReconcileGetCosts;
@class GTLRFreebase_ReconcileGetWarningItem;

NS_ASSUME_NONNULL_BEGIN

/**
 *  GTLRFreebase_ReconcileCandidate
 */
@interface GTLRFreebase_ReconcileCandidate : GTLRObject

/**
 *  Percentage likelihood that this candidate is the unique matching entity.
 *  Value will be between 0.0 and 1.0
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *confidence;

/** Language code that candidate and notable names are displayed in. */
@property(nonatomic, copy, nullable) NSString *lang;

/** Freebase MID of candidate entity. */
@property(nonatomic, copy, nullable) NSString *mid;

/** Freebase name of matching entity in specified language. */
@property(nonatomic, copy, nullable) NSString *name;

/** Type or profession the candidate is notable for. */
@property(nonatomic, strong, nullable) GTLRFreebase_ReconcileCandidateNotable *notable;

@end


/**
 *  Type or profession the candidate is notable for.
 */
@interface GTLRFreebase_ReconcileCandidateNotable : GTLRObject

/**
 *  MID of notable category.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** Name of notable category in specified language. */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  GTLRFreebase_ReconcileGet
 */
@interface GTLRFreebase_ReconcileGet : GTLRObject

/**
 *  If filled, then the listed candidates are potential matches, and such should
 *  be evaluated by a more discerning algorithm or human. The matches are
 *  ordered by confidence.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRFreebase_ReconcileCandidate *> *candidate;

/** Server costs for reconciling. */
@property(nonatomic, strong, nullable) GTLRFreebase_ReconcileGetCosts *costs;

/**
 *  If filled, this entity is guaranteed to match at requested confidence
 *  probability (default 99%).
 */
@property(nonatomic, strong, nullable) GTLRFreebase_ReconcileCandidate *match;

/**
 *  If filled, then there were recoverable problems that affected the request.
 *  For example, some of the properties were ignored because they either are not
 *  valid Freebase predicates or are not indexed for reconciliation. The
 *  candidates returned should be considered valid results, with the caveat that
 *  sections of the request were ignored as specified by the warning text.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRFreebase_ReconcileGetWarningItem *> *warning;

@end


/**
 *  Server costs for reconciling.
 */
@interface GTLRFreebase_ReconcileGetCosts : GTLRObject

/**
 *  Total number of hits found.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *hits;

/**
 *  Total milliseconds spent.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *ms;

@end


/**
 *  GTLRFreebase_ReconcileGetWarningItem
 */
@interface GTLRFreebase_ReconcileGetWarningItem : GTLRObject

/** Location of warning in the request e.g. invalid predicate. */
@property(nonatomic, copy, nullable) NSString *location;

/** Warning message to display to the user. */
@property(nonatomic, copy, nullable) NSString *message;

/** Code for identifying classes of warnings. */
@property(nonatomic, copy, nullable) NSString *reason;

@end

NS_ASSUME_NONNULL_END
