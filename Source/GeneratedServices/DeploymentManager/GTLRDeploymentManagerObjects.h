// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Google Cloud Deployment Manager API (deploymentmanager/v2)
// Description:
//   Declares, configures, and deploys complex solutions on Google Cloud
//   Platform.
// Documentation:
//   https://cloud.google.com/deployment-manager/

#if GTLR_BUILT_AS_FRAMEWORK
  #import "GTLR/GTLRObject.h"
#else
  #import "GTLRObject.h"
#endif

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRDeploymentManager_ConfigFile;
@class GTLRDeploymentManager_Deployment;
@class GTLRDeploymentManager_DeploymentLabelEntry;
@class GTLRDeploymentManager_DeploymentUpdate;
@class GTLRDeploymentManager_DeploymentUpdateLabelEntry;
@class GTLRDeploymentManager_ImportFile;
@class GTLRDeploymentManager_Manifest;
@class GTLRDeploymentManager_Operation;
@class GTLRDeploymentManager_OperationError;
@class GTLRDeploymentManager_OperationErrorErrorsItem;
@class GTLRDeploymentManager_OperationWarningsItem;
@class GTLRDeploymentManager_OperationWarningsItemDataItem;
@class GTLRDeploymentManager_Resource;
@class GTLRDeploymentManager_ResourceUpdate;
@class GTLRDeploymentManager_ResourceUpdateError;
@class GTLRDeploymentManager_ResourceUpdateErrorErrorsItem;
@class GTLRDeploymentManager_ResourceUpdateWarningsItem;
@class GTLRDeploymentManager_ResourceUpdateWarningsItemDataItem;
@class GTLRDeploymentManager_ResourceWarningsItem;
@class GTLRDeploymentManager_ResourceWarningsItemDataItem;
@class GTLRDeploymentManager_TargetConfiguration;
@class GTLRDeploymentManager_Type;

NS_ASSUME_NONNULL_BEGIN

/**
 *  GTLRDeploymentManager_ConfigFile
 */
@interface GTLRDeploymentManager_ConfigFile : GTLRObject

/** The contents of the file. */
@property(nonatomic, copy, nullable) NSString *content;

@end


/**
 *  GTLRDeploymentManager_Deployment
 */
@interface GTLRDeploymentManager_Deployment : GTLRObject

/**
 *  An optional user-provided description of the deployment.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Provides a fingerprint to use in requests to modify a deployment, such as
 *  update(), stop(), and cancelPreview() requests. A fingerprint is a randomly
 *  generated value that must be provided with update(), stop(), and
 *  cancelPreview() requests to perform optimistic locking. This ensures
 *  optimistic concurrency so that only one request happens at a time.
 *  The fingerprint is initially generated by Deployment Manager and changes
 *  after every request to modify data. To get the latest fingerprint value,
 *  perform a get() request to a deployment.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *fingerprint;

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifier;

/**
 *  [Output Only] Timestamp when the deployment was created, in RFC3339 text
 *  format .
 */
@property(nonatomic, copy, nullable) NSString *insertTime;

/**
 *  Map of labels; provided by the client when the resource is created or
 *  updated. Specifically: Label keys must be between 1 and 63 characters long
 *  and must conform to the following regular expression:
 *  [a-z]([-a-z0-9]*[a-z0-9])? Label values must be between 0 and 63 characters
 *  long and must conform to the regular expression
 *  ([a-z]([-a-z0-9]*[a-z0-9])?)?
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDeploymentManager_DeploymentLabelEntry *> *labels;

/**
 *  [Output Only] URL of the manifest representing the last manifest that was
 *  successfully deployed.
 */
@property(nonatomic, copy, nullable) NSString *manifest;

/**
 *  Name of the resource; provided by the client when the resource is created.
 *  The name must be 1-63 characters long, and comply with RFC1035.
 *  Specifically, the name must be 1-63 characters long and match the regular
 *  expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must
 *  be a lowercase letter, and all following characters must be a dash,
 *  lowercase letter, or digit, except the last character, which cannot be a
 *  dash.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  [Output Only] The Operation that most recently ran, or is currently running,
 *  on this deployment.
 */
@property(nonatomic, strong, nullable) GTLRDeploymentManager_Operation *operation;

/** [Output Only] Self link for the deployment. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/**
 *  [Input Only] The parameters that define your deployment, including the
 *  deployment configuration and relevant templates.
 */
@property(nonatomic, strong, nullable) GTLRDeploymentManager_TargetConfiguration *target;

/**
 *  [Output Only] If Deployment Manager is currently updating or previewing an
 *  update to this deployment, the updated configuration appears here.
 */
@property(nonatomic, strong, nullable) GTLRDeploymentManager_DeploymentUpdate *update;

@end


/**
 *  GTLRDeploymentManager_DeploymentLabelEntry
 */
@interface GTLRDeploymentManager_DeploymentLabelEntry : GTLRObject

@property(nonatomic, copy, nullable) NSString *key;
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRDeploymentManager_DeploymentsCancelPreviewRequest
 */
@interface GTLRDeploymentManager_DeploymentsCancelPreviewRequest : GTLRObject

/**
 *  Specifies a fingerprint for cancelPreview() requests. A fingerprint is a
 *  randomly generated value that must be provided in cancelPreview() requests
 *  to perform optimistic locking. This ensures optimistic concurrency so that
 *  the deployment does not have conflicting requests (e.g. if someone attempts
 *  to make a new update request while another user attempts to cancel a
 *  preview, this would prevent one of the requests).
 *  The fingerprint is initially generated by Deployment Manager and changes
 *  after every request to modify a deployment. To get the latest fingerprint
 *  value, perform a get() request on the deployment.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *fingerprint;

@end


/**
 *  A response containing a partial list of deployments and a page token used to
 *  build the next request if the request has been truncated.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "deployments" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRDeploymentManager_DeploymentsListResponse : GTLRCollectionObject

/**
 *  [Output Only] The deployments contained in this response.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDeploymentManager_Deployment *> *deployments;

/** [Output Only] A token used to continue a truncated list request. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  GTLRDeploymentManager_DeploymentsStopRequest
 */
@interface GTLRDeploymentManager_DeploymentsStopRequest : GTLRObject

/**
 *  Specifies a fingerprint for stop() requests. A fingerprint is a randomly
 *  generated value that must be provided in stop() requests to perform
 *  optimistic locking. This ensures optimistic concurrency so that the
 *  deployment does not have conflicting requests (e.g. if someone attempts to
 *  make a new update request while another user attempts to stop an ongoing
 *  update request, this would prevent a collision).
 *  The fingerprint is initially generated by Deployment Manager and changes
 *  after every request to modify a deployment. To get the latest fingerprint
 *  value, perform a get() request on the deployment.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *fingerprint;

@end


/**
 *  GTLRDeploymentManager_DeploymentUpdate
 */
@interface GTLRDeploymentManager_DeploymentUpdate : GTLRObject

/**
 *  [Output Only] Map of labels; provided by the client when the resource is
 *  created or updated. Specifically: Label keys must be between 1 and 63
 *  characters long and must conform to the following regular expression:
 *  [a-z]([-a-z0-9]*[a-z0-9])? Label values must be between 0 and 63 characters
 *  long and must conform to the regular expression
 *  ([a-z]([-a-z0-9]*[a-z0-9])?)?
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDeploymentManager_DeploymentUpdateLabelEntry *> *labels;

/**
 *  [Output Only] URL of the manifest representing the update configuration of
 *  this deployment.
 */
@property(nonatomic, copy, nullable) NSString *manifest;

@end


/**
 *  GTLRDeploymentManager_DeploymentUpdateLabelEntry
 */
@interface GTLRDeploymentManager_DeploymentUpdateLabelEntry : GTLRObject

@property(nonatomic, copy, nullable) NSString *key;
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRDeploymentManager_ImportFile
 */
@interface GTLRDeploymentManager_ImportFile : GTLRObject

/** The contents of the file. */
@property(nonatomic, copy, nullable) NSString *content;

/** The name of the file. */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  GTLRDeploymentManager_Manifest
 */
@interface GTLRDeploymentManager_Manifest : GTLRObject

/** [Output Only] The YAML configuration for this manifest. */
@property(nonatomic, strong, nullable) GTLRDeploymentManager_ConfigFile *config;

/**
 *  [Output Only] The fully-expanded configuration file, including any templates
 *  and references.
 */
@property(nonatomic, copy, nullable) NSString *expandedConfig;

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifier;

/** [Output Only] The imported files for this manifest. */
@property(nonatomic, strong, nullable) NSArray<GTLRDeploymentManager_ImportFile *> *imports;

/**
 *  [Output Only] Timestamp when the manifest was created, in RFC3339 text
 *  format.
 */
@property(nonatomic, copy, nullable) NSString *insertTime;

/** [Output Only] The YAML layout for this manifest. */
@property(nonatomic, copy, nullable) NSString *layout;

/** [Output Only] The name of the manifest. */
@property(nonatomic, copy, nullable) NSString *name;

/** [Output Only] Self link for the manifest. */
@property(nonatomic, copy, nullable) NSString *selfLink;

@end


/**
 *  A response containing a partial list of manifests and a page token used to
 *  build the next request if the request has been truncated.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "manifests" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRDeploymentManager_ManifestsListResponse : GTLRCollectionObject

/**
 *  [Output Only] Manifests contained in this list response.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDeploymentManager_Manifest *> *manifests;

/** [Output Only] A token used to continue a truncated list request. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  An Operation resource, used to manage asynchronous API requests.
 */
@interface GTLRDeploymentManager_Operation : GTLRObject

/** [Output Only] Reserved for future use. */
@property(nonatomic, copy, nullable) NSString *clientOperationId;

/** [Output Only] Creation timestamp in RFC3339 text format. */
@property(nonatomic, copy, nullable) NSString *creationTimestamp;

/**
 *  [Output Only] A textual description of the operation, which is set when the
 *  operation is created.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  [Output Only] The time that this operation was completed. This value is in
 *  RFC3339 text format.
 */
@property(nonatomic, copy, nullable) NSString *endTime;

/**
 *  [Output Only] If errors are generated during processing of the operation,
 *  this field will be populated.
 */
@property(nonatomic, strong, nullable) GTLRDeploymentManager_OperationError *error;

/**
 *  [Output Only] If the operation fails, this field contains the HTTP error
 *  message that was returned, such as NOT FOUND.
 */
@property(nonatomic, copy, nullable) NSString *httpErrorMessage;

/**
 *  [Output Only] If the operation fails, this field contains the HTTP error
 *  status code that was returned. For example, a 404 means the resource was not
 *  found.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *httpErrorStatusCode;

/**
 *  [Output Only] The unique identifier for the resource. This identifier is
 *  defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifier;

/**
 *  [Output Only] The time that this operation was requested. This value is in
 *  RFC3339 text format.
 */
@property(nonatomic, copy, nullable) NSString *insertTime;

/**
 *  [Output Only] Type of the resource. Always compute#operation for Operation
 *  resources.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/** [Output Only] Name of the resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  [Output Only] The type of operation, such as insert, update, or delete, and
 *  so on.
 */
@property(nonatomic, copy, nullable) NSString *operationType;

/**
 *  [Output Only] An optional progress indicator that ranges from 0 to 100.
 *  There is no requirement that this be linear or support any granularity of
 *  operations. This should not be used to guess when the operation will be
 *  complete. This number should monotonically increase as the operation
 *  progresses.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *progress;

/**
 *  [Output Only] The URL of the region where the operation resides. Only
 *  available when performing regional operations.
 */
@property(nonatomic, copy, nullable) NSString *region;

/** [Output Only] Server-defined URL for the resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/**
 *  [Output Only] The time that this operation was started by the server. This
 *  value is in RFC3339 text format.
 */
@property(nonatomic, copy, nullable) NSString *startTime;

/**
 *  [Output Only] The status of the operation, which can be one of the
 *  following: PENDING, RUNNING, or DONE.
 */
@property(nonatomic, copy, nullable) NSString *status;

/**
 *  [Output Only] An optional textual description of the current status of the
 *  operation.
 */
@property(nonatomic, copy, nullable) NSString *statusMessage;

/**
 *  [Output Only] The unique target ID, which identifies a specific incarnation
 *  of the target resource.
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *targetId;

/** [Output Only] The URL of the resource that the operation modifies. */
@property(nonatomic, copy, nullable) NSString *targetLink;

/**
 *  [Output Only] User who requested the operation, for example:
 *  user\@example.com.
 */
@property(nonatomic, copy, nullable) NSString *user;

/**
 *  [Output Only] If warning messages are generated during processing of the
 *  operation, this field will be populated.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDeploymentManager_OperationWarningsItem *> *warnings;

/**
 *  [Output Only] The URL of the zone where the operation resides. Only
 *  available when performing per-zone operations.
 *
 *  Remapped to 'zoneProperty' to avoid NSObject's 'zone'.
 */
@property(nonatomic, copy, nullable) NSString *zoneProperty;

@end


/**
 *  [Output Only] If errors are generated during processing of the operation,
 *  this field will be populated.
 */
@interface GTLRDeploymentManager_OperationError : GTLRObject

/**
 *  [Output Only] The array of errors encountered while processing this
 *  operation.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDeploymentManager_OperationErrorErrorsItem *> *errors;

@end


/**
 *  GTLRDeploymentManager_OperationWarningsItem
 */
@interface GTLRDeploymentManager_OperationWarningsItem : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDeploymentManager_OperationWarningsItemDataItem *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRDeploymentManager_OperationErrorErrorsItem
 */
@interface GTLRDeploymentManager_OperationErrorErrorsItem : GTLRObject

/** [Output Only] The error type identifier for this error. */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Indicates the field in the request that caused the error. This
 *  property is optional.
 */
@property(nonatomic, copy, nullable) NSString *location;

/** [Output Only] An optional, human-readable error message. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRDeploymentManager_OperationWarningsItemDataItem
 */
@interface GTLRDeploymentManager_OperationWarningsItemDataItem : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  A response containing a partial list of operations and a page token used to
 *  build the next request if the request has been truncated.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "operations" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRDeploymentManager_OperationsListResponse : GTLRCollectionObject

/** [Output Only] A token used to continue a truncated list request. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  [Output Only] Operations contained in this list response.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDeploymentManager_Operation *> *operations;

@end


/**
 *  GTLRDeploymentManager_Resource
 */
@interface GTLRDeploymentManager_Resource : GTLRObject

/**
 *  [Output Only] The evaluated properties of the resource with references
 *  expanded. Returned as serialized YAML.
 */
@property(nonatomic, copy, nullable) NSString *finalProperties;

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifier;

/**
 *  [Output Only] Timestamp when the resource was created or acquired, in
 *  RFC3339 text format .
 */
@property(nonatomic, copy, nullable) NSString *insertTime;

/**
 *  [Output Only] URL of the manifest representing the current configuration of
 *  this resource.
 */
@property(nonatomic, copy, nullable) NSString *manifest;

/**
 *  [Output Only] The name of the resource as it appears in the YAML config.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  [Output Only] The current properties of the resource before any references
 *  have been filled in. Returned as serialized YAML.
 */
@property(nonatomic, copy, nullable) NSString *properties;

/**
 *  [Output Only] The type of the resource, for example compute.v1.instance, or
 *  replicaPools.v1beta2.instanceGroupManager.
 */
@property(nonatomic, copy, nullable) NSString *type;

/**
 *  [Output Only] If Deployment Manager is currently updating or previewing an
 *  update to this resource, the updated configuration appears here.
 */
@property(nonatomic, strong, nullable) GTLRDeploymentManager_ResourceUpdate *update;

/**
 *  [Output Only] Timestamp when the resource was updated, in RFC3339 text
 *  format .
 */
@property(nonatomic, copy, nullable) NSString *updateTime;

/** [Output Only] The URL of the actual resource. */
@property(nonatomic, copy, nullable) NSString *url;

/**
 *  [Output Only] If warning messages are generated during processing of this
 *  resource, this field will be populated.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDeploymentManager_ResourceWarningsItem *> *warnings;

@end


/**
 *  GTLRDeploymentManager_ResourceWarningsItem
 */
@interface GTLRDeploymentManager_ResourceWarningsItem : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDeploymentManager_ResourceWarningsItemDataItem *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRDeploymentManager_ResourceWarningsItemDataItem
 */
@interface GTLRDeploymentManager_ResourceWarningsItemDataItem : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  A response containing a partial list of resources and a page token used to
 *  build the next request if the request has been truncated.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "resources" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRDeploymentManager_ResourcesListResponse : GTLRCollectionObject

/** A token used to continue a truncated list request. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  Resources contained in this list response.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDeploymentManager_Resource *> *resources;

@end


/**
 *  GTLRDeploymentManager_ResourceUpdate
 */
@interface GTLRDeploymentManager_ResourceUpdate : GTLRObject

/**
 *  [Output Only] If errors are generated during update of the resource, this
 *  field will be populated.
 */
@property(nonatomic, strong, nullable) GTLRDeploymentManager_ResourceUpdateError *error;

/**
 *  [Output Only] The expanded properties of the resource with reference values
 *  expanded. Returned as serialized YAML.
 */
@property(nonatomic, copy, nullable) NSString *finalProperties;

/** [Output Only] The intent of the resource: PREVIEW, UPDATE, or CANCEL. */
@property(nonatomic, copy, nullable) NSString *intent;

/**
 *  [Output Only] URL of the manifest representing the update configuration of
 *  this resource.
 */
@property(nonatomic, copy, nullable) NSString *manifest;

/**
 *  [Output Only] The set of updated properties for this resource, before
 *  references are expanded. Returned as serialized YAML.
 */
@property(nonatomic, copy, nullable) NSString *properties;

/** [Output Only] The state of the resource. */
@property(nonatomic, copy, nullable) NSString *state;

/**
 *  [Output Only] If warning messages are generated during processing of this
 *  resource, this field will be populated.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDeploymentManager_ResourceUpdateWarningsItem *> *warnings;

@end


/**
 *  [Output Only] If errors are generated during update of the resource, this
 *  field will be populated.
 */
@interface GTLRDeploymentManager_ResourceUpdateError : GTLRObject

/**
 *  [Output Only] The array of errors encountered while processing this
 *  operation.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDeploymentManager_ResourceUpdateErrorErrorsItem *> *errors;

@end


/**
 *  GTLRDeploymentManager_ResourceUpdateWarningsItem
 */
@interface GTLRDeploymentManager_ResourceUpdateWarningsItem : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDeploymentManager_ResourceUpdateWarningsItemDataItem *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRDeploymentManager_ResourceUpdateErrorErrorsItem
 */
@interface GTLRDeploymentManager_ResourceUpdateErrorErrorsItem : GTLRObject

/** [Output Only] The error type identifier for this error. */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Indicates the field in the request that caused the error. This
 *  property is optional.
 */
@property(nonatomic, copy, nullable) NSString *location;

/** [Output Only] An optional, human-readable error message. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRDeploymentManager_ResourceUpdateWarningsItemDataItem
 */
@interface GTLRDeploymentManager_ResourceUpdateWarningsItemDataItem : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRDeploymentManager_TargetConfiguration
 */
@interface GTLRDeploymentManager_TargetConfiguration : GTLRObject

/** The configuration to use for this deployment. */
@property(nonatomic, strong, nullable) GTLRDeploymentManager_ConfigFile *config;

/**
 *  Specifies any files to import for this configuration. This can be used to
 *  import templates or other files. For example, you might import a text file
 *  in order to use the file in a template.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDeploymentManager_ImportFile *> *imports;

@end


/**
 *  A resource type supported by Deployment Manager.
 */
@interface GTLRDeploymentManager_Type : GTLRObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifier;

/**
 *  [Output Only] Timestamp when the type was created, in RFC3339 text format.
 */
@property(nonatomic, copy, nullable) NSString *insertTime;

/** Name of the type. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  [Output Only] The Operation that most recently ran, or is currently running,
 *  on this type.
 */
@property(nonatomic, strong, nullable) GTLRDeploymentManager_Operation *operation;

/** [Output Only] Self link for the type. */
@property(nonatomic, copy, nullable) NSString *selfLink;

@end


/**
 *  A response that returns all Types supported by Deployment Manager
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "types" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRDeploymentManager_TypesListResponse : GTLRCollectionObject

/** A token used to continue a truncated list request. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  [Output Only] A list of resource types supported by Deployment Manager.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDeploymentManager_Type *> *types;

@end

NS_ASSUME_NONNULL_END
